{"version":3,"sources":["components/Transactions.js","components/Profile.js","components/Statistics.js","components/StatisticsList.js","components/Friends.js","components/FriendList.js","components/TransactionHistory.js","components/App.js","index.js"],"names":["Tr","styled","div","img","ul","li","span","p","section","h2","props","isOnline","tr","Td","td","Transactions","type","amount","currency","Table","table","Th","th","TransactionHistory","transactions","class","map","items","id","App","ReactDOM","render","document","getElementById"],"mappings":"u4EAIMA,GCEiBC,IAAOC,IAAV,+EAMAD,IAAOC,IAAV,mEAIHD,IAAOE,IAAV,uHAQGF,IAAOG,GAAV,kHAQOH,IAAOI,GAAV,8IAQDJ,IAAOK,KAAV,kFAKML,IAAOK,KAAV,wGAQDL,IAAOM,EAAV,yGAOEN,IAAOM,EAAV,uHAOQN,IAAOM,EAAV,kG,MC9DDN,IAAOI,GAAV,0JASIJ,IAAOK,KAAV,gDAIQL,IAAOK,KAAV,iDCbDL,IAAOG,GAAV,gGAOMH,IAAOO,QAAV,oJAQDP,IAAOQ,GAAV,2H,MCfER,IAAOI,GAAV,oLAUKJ,IAAOK,KAAV,6HAIG,SAAAI,GAAK,OAAGA,EAAMC,SAAW,QAAU,SAKpCV,IAAOE,IAAV,yEAKEF,IAAOM,EAAV,oICxBGN,IAAOG,GAAV,kELDCH,IAAOW,GAAV,mCAMFC,EAAKZ,IAAOa,GAAV,kJAwBOC,EAhBM,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAKC,EAAmB,EAAnBA,OAAOC,EAAY,EAAZA,SACjC,OACI,eAAClB,EAAD,WACE,cAACa,EAAD,UAAKG,IACL,cAACH,EAAD,UAAKI,IACL,cAACJ,EAAD,UAAKK,QMlBPC,EAAQlB,IAAOmB,MAAV,6FAQLpB,EAAKC,IAAOW,GAAV,kCAKFS,EAAKpB,IAAOqB,GAAV,4HA0COC,EAjCY,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAF,OAEzB,mCACE,eAACL,EAAD,CAAOM,MAAM,sBAAb,UAEE,gCACE,eAAC,EAAD,WACE,cAACJ,EAAD,mBACA,cAACA,EAAD,qBACA,cAACA,EAAD,4BAGJ,gCAEGG,EAAaE,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CACAX,KAAMW,EAAMX,KACZC,OAAQU,EAAMV,OACdC,SAAUS,EAAMT,UAHKS,EAAMC,e,QCL5BC,EAvBL,WACR,OAmBF,aAlBE,CAkBD,EAAD,CAAoBL,aAAcA,K,MC1BlCM,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.c8984856.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from \"styled-components\"\r\n\r\nconst Tr = styled.tr`\r\n\r\n\r\n\r\n`;\r\n\r\nconst Td = styled.td`\r\ntext-align: center;\r\ntext-transform: capitalize;\r\nborder-left: 1px solid black;\r\nborder-bottom: 1px solid black;\r\n\r\n\r\n`;\r\nconst Transactions = ({type,amount,currency})=>{\r\n  return( \r\n      <Tr>\r\n        <Td>{type}</Td>\r\n        <Td>{amount}</Td>\r\n        <Td>{currency}</Td>\r\n      </Tr>\r\n  )\r\n}\r\nTransactions.propTypes={\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n  \r\n}\r\n\r\nexport default Transactions","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from \"styled-components\"\r\n\r\n\r\n  \r\nconst ProfileWrapper = styled.div`\r\nwidth:200px;\r\nheigth: 500px;\r\nmargin:50px auto;\r\n\r\n`;\r\nconst Description = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\n`;\r\nconst Image = styled.img`\r\nwidth: 100px;\r\nheigth:100px;\r\nborder-radius:50px;\r\nmargin:0 auto;\r\npadding-bottom:20px;\r\n\r\n`;\r\nconst Stats = styled.ul`\r\ndisplay: flex;\r\npadding:0;\r\njustify-content: center;\r\nbackground-color: #e1e4e8;\r\n\r\n\r\n`;\r\nconst StatsItem = styled.li`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items:center;\r\nlist-style-type: none;\r\nwidth: 60px;\r\nheigth:60px;\r\n`;\r\nconst Label = styled.span`\r\nfont-size: 14px;\r\nline-height: 1.5;\r\ncolor: #959da5;\r\n`;\r\nconst Quantity = styled.span`\r\nfont-size: 16px;\r\nline-height: 1.5;\r\ncolor: #1b1f23;\r\nfont-weight: bold;\r\n\r\n`;\r\n\r\nconst Name = styled.p`\r\nfont-size: 18px;\r\nfont-weight: bold;\r\nmargin:0 auto;\r\npadding-bottom:5px;\r\n\r\n`;\r\nconst Tag = styled.p`\r\nfont-size: 14px;\r\nline-height: 1.5;\r\ncolor: #959da5;\r\nmargin:0 auto;\r\npadding-bottom:5px;\r\n`;\r\nconst Location = styled.p`\r\nfont-size: 16px;\r\nline-height: 1.5;\r\ncolor: #959da5;\r\nmargin:0 auto;\r\n`;\r\n\r\nconst Profile = ({avatar,name,tag,location,statsFollowers,statsViews,statsLikes})=>{\r\n  return(\r\n    <ProfileWrapper class=\"profile\">\r\n      <Description class=\"description\">\r\n        <Image\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          class=\"avatar\"\r\n        />\r\n        <Name class=\"name\">{name}</Name>\r\n        <Tag class=\"tag\">@{tag}</Tag>\r\n        <Location class=\"location\">{location}</Location>\r\n      </Description>\r\n\r\n      <Stats class=\"stats\">\r\n        <StatsItem>\r\n          <Label class=\"label\">Followers</Label>\r\n          <Quantity class=\"quantity\">{statsFollowers}</Quantity>\r\n        </StatsItem>\r\n        <StatsItem>\r\n          <Label class=\"label\">Views</Label>\r\n          <Quantity class=\"quantity\">{statsViews}</Quantity>\r\n        </StatsItem>\r\n        <StatsItem>\r\n          <Label class=\"label\">Likes</Label>\r\n          <Quantity class=\"quantity\">{statsLikes}</Quantity>\r\n        </StatsItem>\r\n      </Stats>\r\n</ProfileWrapper>\r\n  \r\n  )\r\n}\r\nProfile.propTypes={\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  statsFollowers: PropTypes.number.isRequired,\r\n  statsViews: PropTypes.number.isRequired,\r\n  statsLikes: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst Item = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items:center;\r\n  list-style-type: none;\r\n  width: 60px;\r\n  heigth:auto;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Percentage = styled.span`\r\n  font-size: 16px; \r\n`;\r\n\r\nconst Statistics = ({statsLabel,statsPercentage})=>{\r\n  return(\r\n        <Item class=\"item\">\r\n          <Label class=\"label\">{statsLabel}</Label>\r\n          <Percentage class=\"percentage\">{statsPercentage}%</Percentage>\r\n        </Item>\r\n  )\r\n}\r\nStatistics.propTypes={\r\n  statsLabel: PropTypes.string.isRequired,\r\n  statsPercentage: PropTypes.number.isRequired,\r\n  \r\n}\r\n\r\nexport default Statistics","import React from 'react'\r\nimport Statistics from './Statistics'\r\nimport PropTypes from 'prop-types'\r\nimport styled from \"styled-components\"\r\n\r\nconst ItemId = styled.ul`\r\n  list-style-type: none;\r\n  padding:0;\r\n  display: flex;\r\n  \r\n  \r\n  `;\r\nconst Statistic = styled.section`\r\n  width:300px;\r\n  heigth:200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items:center;\r\n`;\r\nconst Title = styled.h2`\r\n  color: #959da5;\r\n  font-size: 18px;\r\n  line-height: 1.5;\r\n  text-transform:uppercase;\r\n  \r\n  `;\r\n\r\n\r\nconst StatisticsList = ({statisticalData})=>(\r\n  <>\r\n  \r\n  <Statistic class=\"statistics\">\r\n    <Title class=\"title\">Upload stats</Title>\r\n      <ItemId>\r\n        {statisticalData.map((item)=>(\r\n          \r\n            <Statistics key = {item.id}\r\n            stats={item.statisticalData}\r\n            statsLabel={item.label}\r\n            statsPercentage={item.percentage}\r\n          />\r\n          \r\n        ))}\r\n        </ItemId>\r\n    </Statistic>\r\n  </>\r\n)\r\nStatisticsList.propTypes={\r\n  statisticalData: PropTypes.arrayOf(PropTypes.shape({\r\n    id:PropTypes.string.isRequired,\r\n    \r\n  })).isRequired\r\n}\r\n  export default StatisticsList","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst Item = styled.li`\r\n  width: 200px;\r\n  display:flex;\r\n  align-items:center;\r\n  padding-left: 20px;\r\n  margin: 0 auto;\r\n  margin-bottom:10px;\r\n  border: 1px #959da5 solid;\r\n`;\r\n\r\nconst Status = styled.span`\r\n  width:10px;\r\n  height:10px;\r\n  border-radius: 50%;\r\n  background:${props =>props.isOnline ? \"green\" : \"red\"};\r\n  margin-rigth:20px;\r\n\r\n`;\r\n\r\nconst Image = styled.img`\r\n  margin-left:20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  color: #1b1f23;;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  line-height: 1.5;\r\n  margin-left:20px;\r\n`;\r\n\r\nconst Friends = ({avatar,name,isOnline})=>{\r\n  return(\r\n    \r\n    <Item class=\"item\">\r\n      <Status isOnline={isOnline}  class=\"status\">{isOnline}</Status>\r\n      <Image class=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <Name class=\"name\">{name}</Name>\r\n    </Item>\r\n\r\n  )\r\n}\r\nFriends.propTypes={\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.string.isRequired,\r\n  \r\n}\r\n\r\nexport default Friends","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Friends from './Friends'\r\nimport styled from \"styled-components\"\r\n\r\nconst List = styled.ul`\r\nlist-style-type: none;\r\npadding:0;\r\n\r\n`;\r\n\r\n\r\nconst FriendList = ({friends})=>(\r\n  \r\n\r\n<List class=\"friend-list\">\r\n    {friends.map(({id,avatar,name,isOnline})=>(\r\n        <Friends key = {id}\r\n        avatar={avatar}\r\n        name={name}\r\n        isOnline={isOnline}\r\n        />\r\n    ))}\r\n    </List>\r\n)\r\nFriendList.propTypes={\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n    id:PropTypes.string.isRequired,\r\n    \r\n  })).isRequired\r\n}\r\nexport default FriendList","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Transactions from './Transactions'\r\nimport styled from \"styled-components\"\r\n\r\nconst Table = styled.table`\r\nborder: 1px #959da5 solid;\r\nwidth: 600px;\r\nheight: 800px;\r\n\r\n\r\n\r\n`;\r\nconst Tr = styled.tr`\r\n\r\n\r\n\r\n`;\r\nconst Th = styled.th`\r\ntext-transform: uppercase;\r\nborder-left: 1px solid black;\r\nborder-bottom: 1px solid black;\r\n\r\n\r\n`;\r\n\r\n\r\nconst TransactionHistory = ({transactions})=>(\r\n  \r\n  <>\r\n    <Table class=\"transaction-history\">\r\n  \r\n      <thead>\r\n        <Tr>\r\n          <Th>Type</Th>\r\n          <Th>Amount</Th>\r\n          <Th>Currency</Th>\r\n        </Tr>\r\n      </thead>\r\n      <tbody>\r\n        \r\n        {transactions.map((items)=>(\r\n                <Transactions key = {items.id}\r\n                type={items.type}\r\n                amount={items.amount}\r\n                currency={items.currency}\r\n                />\r\n        ))}\r\n      </tbody>\r\n   \r\n  \r\n  </Table>\r\n  </>\r\n)\r\nTransactionHistory.propTypes={\r\n  transactions: PropTypes.arrayOf(PropTypes.shape({\r\n    id:PropTypes.string.isRequired,\r\n    \r\n  })).isRequired\r\n}\r\nexport default TransactionHistory","import React from 'react'\r\nimport user from '../user.json'\r\nimport Profile from './Profile'\r\nimport statisticalData from '../statistical-data.json';\r\nimport StatisticsList from './StatisticsList'\r\nimport friends from '../friends.json'\r\nimport FriendList from './FriendList'\r\nimport Friends from './Friends'\r\nimport TransactionHistory from './TransactionHistory'\r\nimport transactions from '../transactions.json'\r\nimport Transactions from './Transactions'\r\n\r\n\r\n\r\nconst App=()=>{\r\n  return(\r\n  //   <Profile\r\n  // name={user.name}\r\n  // tag={user.tag}\r\n  // location={user.location}\r\n  // avatar={user.avatar}\r\n  // statsFollowers={user.stats.followers}\r\n  // statsViews={user.stats.views}\r\n  // statsLikes={user.stats.likes}\r\n  //   />\r\n\r\n\r\n//  <StatisticsList \r\n//  title=\"Upload stats\" stats={statisticalData}  \r\n//  StatisticsList statisticalData={statisticalData} /> \r\n\r\n\r\n//<FriendList friends={friends} />\r\n\r\n<TransactionHistory transactions={transactions} />\r\n  )\r\n}\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}