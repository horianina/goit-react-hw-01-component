{"version":3,"sources":["components/Profile.js","components/Statistics.js","components/StatisticsList.js","components/Friends.js","components/FriendList.js","components/Transactions.js","components/TransactionHistory.js","components/App.js","index.js"],"names":["ProfileWrapper","styled","div","Description","Image","img","Stats","ul","StatsItem","li","Label","span","Quantity","Name","p","Tag","Location","Profile","avatar","name","tag","location","statsFollowers","statsViews","statsLikes","className","src","alt","Item","Percentage","Statistics","statsLabel","statsPercentage","ItemId","Statistic","section","Title","h2","StatisticsList","statisticalData","map","item","stats","label","percentage","id","Status","props","isOnline","Friends","width","List","FriendList","friends","Td","td","Transactions","type","amount","currency","Table","table","Th","th","TransactionHistory","transactions","items","App","user","followers","views","likes","title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e73b3ce.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\n\r\n  \r\nconst ProfileWrapper = styled.div`\r\nwidth:200px;\r\nheigth: 500px;\r\nmargin:50px auto;\r\n\r\n`;\r\nconst Description = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\n`;\r\nconst Image = styled.img`\r\nwidth: 100px;\r\nheigth:100px;\r\nborder-radius:50px;\r\nmargin:0 auto;\r\npadding-bottom:20px;\r\n\r\n`;\r\nconst Stats = styled.ul`\r\ndisplay: flex;\r\npadding:0;\r\njustify-content: center;\r\nbackground-color: #e1e4e8;\r\n\r\n\r\n`;\r\nconst StatsItem = styled.li`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items:center;\r\nlist-style-type: none;\r\nwidth: 60px;\r\nheigth:60px;\r\n`;\r\nconst Label = styled.span`\r\nfont-size: 14px;\r\nline-height: 1.5;\r\ncolor: #959da5;\r\n`;\r\nconst Quantity = styled.span`\r\nfont-size: 16px;\r\nline-height: 1.5;\r\ncolor: #1b1f23;\r\nfont-weight: bold;\r\n\r\n`;\r\n\r\nconst Name = styled.p`\r\nfont-size: 18px;\r\nfont-weight: bold;\r\nmargin:0 auto;\r\npadding-bottom:5px;\r\n\r\n`;\r\nconst Tag = styled.p`\r\nfont-size: 14px;\r\nline-height: 1.5;\r\ncolor: #959da5;\r\nmargin:0 auto;\r\npadding-bottom:5px;\r\n`;\r\nconst Location = styled.p`\r\nfont-size: 16px;\r\nline-height: 1.5;\r\ncolor: #959da5;\r\nmargin:0 auto;\r\n`;\r\n\r\nconst Profile = ({avatar,name,tag,location,statsFollowers,statsViews,statsLikes})=>{\r\n  return(\r\n    <ProfileWrapper className=\"profile\">\r\n      <Description className=\"description\">\r\n        <Image\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className=\"avatar\"\r\n        />\r\n        <Name className=\"name\">{name}</Name>\r\n        <Tag className=\"tag\">@{tag}</Tag>\r\n        <Location className=\"location\">{location}</Location>\r\n      </Description>\r\n\r\n      <Stats className=\"stats\">\r\n        <StatsItem>\r\n          <Label className=\"label\">Followers</Label>\r\n          <Quantity className=\"quantity\">{statsFollowers}</Quantity>\r\n        </StatsItem>\r\n        <StatsItem>\r\n          <Label className=\"label\">Views</Label>\r\n          <Quantity className=\"quantity\">{statsViews}</Quantity>\r\n        </StatsItem>\r\n        <StatsItem>\r\n          <Label className=\"label\">Likes</Label>\r\n          <Quantity className=\"quantity\">{statsLikes}</Quantity>\r\n        </StatsItem>\r\n      </Stats>\r\n</ProfileWrapper>\r\n  \r\n  )\r\n}\r\nProfile.propTypes={\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  statsFollowers: PropTypes.number.isRequired,\r\n  statsViews: PropTypes.number.isRequired,\r\n  statsLikes: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Item = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items:center;\r\n  list-style-type: none;\r\n  width: 60px;\r\n  heigth:auto;\r\n`;\r\nconst Label = styled.span`\r\n  font-size: 14px;\r\n`;\r\nconst Percentage = styled.span`\r\n  font-size: 16px; \r\n`;\r\nconst Statistics = ({statsLabel,statsPercentage})=>\r\n  (\r\n        <Item className=\"item\">\r\n          <Label className=\"label\">{statsLabel}</Label>\r\n          <Percentage className=\"percentage\">{statsPercentage}%</Percentage>\r\n        </Item>\r\n  )\r\n\r\nStatistics.propTypes={\r\n  statsLabel: PropTypes.string.isRequired,\r\n  statsPercentage: PropTypes.number.isRequired, \r\n}\r\n\r\nexport default Statistics","import React from 'react'\r\nimport Statistics from './Statistics'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst ItemId = styled.ul`\r\n  list-style-type: none;\r\n  padding:0;\r\n  display: flex;\r\n  `;\r\nconst Statistic = styled.section`\r\n  width:300px;\r\n  heigth:200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items:center;\r\n`;\r\nconst Title = styled.h2`\r\n  color: #959da5;\r\n  font-size: 18px;\r\n  line-height: 1.5;\r\n  text-transform:uppercase;\r\n  `;\r\nconst StatisticsList = ({statisticalData})=>(\r\n  <>\r\n  <Statistic className=\"statistics\">\r\n    <Title className=\"title\">Upload stats</Title>\r\n      <ItemId>\r\n        {statisticalData.map((item)=>(\r\n            <Statistics key = {item.id}\r\n            stats={item.statisticalData}\r\n            statsLabel={item.label}\r\n            statsPercentage={item.percentage}\r\n          />  \r\n        ))}\r\n        </ItemId>\r\n    </Statistic>\r\n  </>\r\n)\r\nStatisticsList.propTypes={\r\n  statisticalData: PropTypes.arrayOf(PropTypes.shape({\r\n    id:PropTypes.string.isRequired, \r\n  })).isRequired\r\n}\r\n  export default StatisticsList","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Item = styled.li`\r\n  width: 200px;\r\n  display:flex;\r\n  align-items:center;\r\n  padding-left: 20px;\r\n  margin: 0 auto;\r\n  margin-bottom:10px;\r\n  border: 1px #959da5 solid;\r\n`;\r\n\r\nconst Status = styled.span`\r\n  width:10px;\r\n  height:10px;\r\n  border-radius: 50%;\r\n  background:${props =>props.isOnline ? \"green\" : \"red\"};\r\n  margin-rigth:20px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  margin-left:20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  color: #1b1f23;;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  line-height: 1.5;\r\n  margin-left:20px;\r\n`;\r\n\r\nconst Friends = ({avatar,name,isOnline})=>\r\n  (\r\n    <Item className=\"item\">\r\n      <Status isOnline={isOnline}  className=\"status\">{isOnline}</Status>\r\n      <Image className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <Name className=\"name\">{name}</Name>\r\n    </Item>\r\n  )\r\n\r\nFriends.propTypes={\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  \r\n}\r\n\r\nexport default Friends","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Friends from './Friends'\r\nimport styled from 'styled-components'\r\n\r\nconst List = styled.ul`\r\nlist-style-type: none;\r\npadding:0;\r\n`;\r\n\r\nconst FriendList = ({friends})=>(\r\n  \r\n<List className=\"friend-list\">\r\n    {friends.map(({id,avatar,name,isOnline})=>(\r\n        <Friends key = {id}\r\n        avatar={avatar}\r\n        name={name}\r\n        isOnline={isOnline}\r\n        />\r\n    ))}\r\n    </List>\r\n)\r\nFriendList.propTypes={\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n    id:PropTypes.number.isRequired,  \r\n  })).isRequired\r\n}\r\nexport default FriendList","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Td = styled.td`\r\ntext-align: center;\r\ntext-transform: capitalize;\r\nborder-left: 1px solid black;\r\nborder-bottom: 1px solid black;\r\n`;\r\nconst Transactions = ({type,amount,currency})=>{\r\n  return( \r\n      <tr>\r\n        <Td>{type}</Td>\r\n        <Td>{amount}</Td>\r\n        <Td>{currency}</Td>\r\n      </tr>\r\n  )\r\n}\r\nTransactions.propTypes={\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,  \r\n}\r\n\r\nexport default Transactions","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Transactions from './Transactions'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\nborder: 1px #959da5 solid;\r\nwidth: 600px;\r\nheight: 800px;\r\n`;\r\n\r\nconst Th = styled.th`\r\ntext-transform: uppercase;\r\nborder-left: 1px solid black;\r\nborder-bottom: 1px solid black;\r\n`;\r\n\r\nconst TransactionHistory = ({transactions})=>(\r\n  \r\n    <Table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <Th>Type</Th>\r\n          <Th>Amount</Th>\r\n          <Th>Currency</Th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>  \r\n        {transactions.map((items)=>(\r\n                <Transactions key = {items.id}\r\n                type={items.type}\r\n                amount={items.amount}\r\n                currency={items.currency}\r\n                />\r\n        ))}\r\n      </tbody>\r\n  </Table>\r\n  \r\n)\r\nTransactionHistory.propTypes={\r\n  transactions: PropTypes.arrayOf(PropTypes.shape({\r\n    id:PropTypes.string.isRequired,  \r\n  })).isRequired\r\n}\r\nexport default TransactionHistory","import React from 'react'\r\nimport user from '../data/user.json'\r\nimport Profile from './Profile'\r\nimport statisticalData from '../data/statistical-data.json'\r\nimport StatisticsList from './StatisticsList'\r\nimport friends from '../data/friends.json'\r\nimport FriendList from './FriendList'\r\nimport TransactionHistory from './TransactionHistory'\r\nimport transactions from '../data/transactions.json'\r\n\r\n\r\nconst App=()=>{\r\n  \r\n  return(\r\n    <>\r\n    <Profile\r\n  name={user.name}\r\n  tag={user.tag}\r\n  location={user.location}\r\n  avatar={user.avatar}\r\n  statsFollowers={user.stats.followers}\r\n  statsViews={user.stats.views}\r\n  statsLikes={user.stats.likes}/>\r\n    \r\n  <StatisticsList \r\n  title=\"Upload stats\" stats={statisticalData}  \r\n  StatisticsList statisticalData={statisticalData} />\r\n\r\n<TransactionHistory transactions={transactions} />\r\n\r\n<FriendList friends={friends} />\r\n\r\n\r\n</>\r\n  )\r\n}\r\n  \r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}